##Create Table II##  
The body of the POST request to create a table has to be JSON. It needs to have:

* `projectId`: The project ID to which the table belongs.
* `name`: The table asset name.
* `draftAccessList`: The name of an access list of the 'Map Editor' type (typically `Map Editors`). The user on whose behalf the request is being sent must be an editor on that access list. You can view and edit these lists [here](//mapsengine.google.com/admin/#AclPlace:cid={userProjectId}&v=LIST).
* `schema`: A schema object containing the schema for this table. A schema object should contain:
	* `columns`: An array of the table's column information. Each object in the array contains a column `name` and a `type`. Allowed types are integer, double, string, mixedGeometry, points, lineStrings, and polygons. The first object in the array should have the name `geometry` and you should specify the geometry type of the features in the table.

There are also several optional parameters that can be included in the body, which are:

* `description`: The table asset description.
* `publishedAccessList`: Defines the access list to whom view permissions of the table are granted. If you do not include this parameter, it will default your table to be private, which means that only authorized users (including you) can see the table. If you want to make it public, you can set the value of this parameter to be `Map Viewers`. To learn more, you can go to [this link](//support.google.com/mapsengine/answer/1620740?hl=en).
* `tags`: An array of text strings, with each string representing a tag for the table.

###Exercise###  
Try to create a POST request body to create an empty table to your project. You can create a table with any schema you want. Remember to use the project ID specified in the box below. The project ID is the ID of the project you chose in 'Create a Free Project' lesson. We have provided the URL and the header of the request for you, so you don't need to change them. For reference, you can visit the previous page (Create Table I) to see what the body of the request should look like.